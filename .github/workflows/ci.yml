name: Cargo Build & Test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        feature:
          - zstd,lzma,lz4
        include:
          - toolchain: stable
            os: ubuntu-latest
            feature: zstd
          - toolchain: stable
            os: ubuntu-latest
            feature: lzma
          - toolchain: stable
            os: ubuntu-latest
            feature: lz4
          - toolchain: stable
            os: ubuntu-latest
            feature: zstd,lzma
          - toolchain: stable
            os: ubuntu-latest
            feature: zstd,lz4
          - toolchain: stable
            os: ubuntu-latest
            feature: lzma,lz4
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain ${{ matrix.toolchain }}
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt

      - name: Check format
        run: cargo fmt --check

      - name: Test code
        run: cargo test --features ${{ matrix.feature }} --verbose

      - name: Build and run exemples
        run: |
          cargo build --examples
          cargo run --example simple_create
          cargo run --example simple_read


  check_publication:
    name: Check we can publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dry Run Pubish
        env:
         CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish --dry-run
